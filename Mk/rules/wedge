.PHONY: install-wedge clean-wedge

install-wedge::
install-wedge-l4ka::
install-wedge-xen-2::
install-wedge-xen-3::

install-$(cfg_l4ka_wedge)  +=  install-wedge-l4ka  # wedge-apps 
install-$(cfg_xen_2_wedge) +=  install-wedge-xen-2 # wedge-apps 
install-$(cfg_xen_3_wedge) +=  install-wedge-xen-3 # wedge-apps 

clean:: clean-wedge
clean-wedge:: #clean-wedge-apps

clean-wedge::
clean-wedge-l4ka::
clean-wedge-xen-2::
clean-wedge-xen-3::

uninstall-wedge::
uninstall-wedge-l4ka::
uninstall-wedge-xen-2::
uninstall-wedge-xen-3::

wedge-l4ka-y =
wedge-l4ka-$(cfg_wedge_l4ka_passthru) += passthru
wedge-l4ka-$(cfg_wedge_l4ka_passthru_perf) += passthru-perf
wedge-l4ka-$(cfg_wedge_l4ka_guest) += guest
wedge-l4ka-$(cfg_wedge_l4ka_guest_perf) += guest-perf
wedge-l4ka-$(cfg_wedge_l4ka_guest_vdev) += guest-vdev
wedge-l4ka-$(cfg_wedge_l4ka_guest_vdev_perf) += guest-vdev-perf
wedge-l4ka-$(cfg_wedge_l4ka_passthru_pci) += passthru-pci
wedge-l4ka-$(cfg_wedge_l4ka_passthru_pci) += passthru-pci
wedge-l4ka-$(cfg_wedge_l4ka_smp) += smp
wedge-l4ka-$(cfg_wedge_l4ka_apic) += apic
wedge-l4ka-$(cfg_wedge_l4ka_numvcpus) += numvcpus
wedge-l4ka-$(cfg_wedge_l4ka_numpcpus) += numpcpus

wedge-xen-y =
wedge-xen-2-$(cfg_wedge_kaxen_2_dom0) += dom0
wedge-xen-2-$(cfg_wedge_kaxen_2_dom0_perf) += dom0-perf
wedge-xen-3-$(cfg_wedge_kaxen_3_dom0) += dom0
wedge-xen-3-$(cfg_wedge_kaxen_3_dom0_perf) += dom0-perf
wedge-xen-3-$(cfg_wedge_kaxen_3_domU)  += domU


CPU-p4 = CPU_P4
CPU-p3 = CPU_P3
CPU-k8 = CPU_K8
CPU-qemu = CPU_QEMU

ifeq ($(cfg_idl4),y)
require-install-idl4 = install-idl4
endif

.PHONY: wedge-apps clean-wedge-apps
wedge-apps:
	$(Q) mkdir -p $(cfg_build_dir)/wedge-apps
	$(Q) (cd $(afterburn_dir)/wedge-apps && make  \
		 L4KA_INTERFACE_DIR=$(interfaces_dir) \
		 L4KA_PISTACHIO_USER=$(cfg_usr_dir) \
		 AFTERBURN_SRC=$(afterburn_dir)/wedge-apps \
		 BUILDDIR=$(cfg_build_dir)/wedge-apps \
		 ENABLE_L4=$(cfg_l4ka_wedge) )

clean-wedge-apps:
	$(Q) (cd $(afterburn_dir)/wedge-apps && make clean AFTERBURN_BUILD=$(cfg_build_dir)/wedge-apps)


wedge-archconf-y =
wedge-archconf-$(cfg_arch_ia32)      = ARCH_IA32=y
wedge-archconf-$(cfg_arch_amd64)     = ARCH_AMD64=y
wedge-archconf-$(cfg_arch_ia64)      = ARCH_IA64=y
wedge-archconf-$(cfg_arch_powerpc)   = ARCH_POWERPC=y
wedge-archconf-$(cfg_arch_powerpc64) = ARCH_POWERPC=y
wedge-archconf-$(cfg_arch_arm)       = ARCH_ARM=y

wedge-opts-y =		  DEVICE_APIC=$(cfg_apic) $(wedge-archconf-y)
wedge-opts-$(cfg_apic) += MAX_IOAPICS=$(cfg_max_ioapics)  


wedge-vdev-on  = DEVICE_DP83820=y DEVICE_IDE=y DEVICE_I82371AB=y

ifeq ($(cfg_vsmp),y) 
wedge-opts-$(cfg_smp_supported) +=  VSMP=$(cfg_vsmp)
wedge-opts-$(cfg_vsmp)		+=  NR_VCPUS=$(cfg_nr_vcpus) 
endif

ifeq ($(cfg_smp),y) 
wedge-opts-$(cfg_smp_supported) +=  SMP=$(cfg_smp)
wedge-opts-$(cfg_smp)		+=  NR_CPUS=$(cfg_nr_cpus)
endif

wedge-opts-$(cfg_l4ka_vm) += L4KA_VM=$(cfg_l4ka_vm)
wedge-opts-$(cfg_l4ka_vmext) += L4KA_VMEXT=$(cfg_l4ka_vmext) 
wedge-opts-$(cfg_l4ka_vt) += L4KA_VT=$(cfg_l4ka_vt)

.PHONY: wedge-l4ka-prereqs wedge-xen-2-prereqs wedge-xen-3-prereqs
wedge-l4ka-prereqs: install-pistachio-user $(require-install-idl4) install-l4ka-resourcemon
wedge-xen-2-prereqs: install-xen-2
wedge-xen-3-prereqs: install-xen-3

wedge-l4ka-passthru = WEDGE_L4KA DEVICE_PASSTHRU \
  $(wedge-opts-y) \
  L4KA_INTERFACE_DIR=$(interfaces_dir) L4KA_PISTACHIO_USER=$(cfg_usr_dir) \
  DEVICE_PCI_FORWARD=n $(wedge-opts-smp-y) 

wedge-l4ka-passthru-perf = WEDGE_L4KA DEVICE_PASSTHRU \
  $(wedge-opts-y) \
  L4KA_INTERFACE_DIR=$(interfaces_dir) L4KA_PISTACHIO_USER=$(cfg_usr_dir) \
  OPTIMIZE=y DEVICE_PCI_FORWARD=n \

wedge-l4ka-passthru-pci = WEDGE_L4KA DEVICE_PASSTHRU \
  $(wedge-opts-y) \
  L4KA_INTERFACE_DIR=$(interfaces_dir) L4KA_PISTACHIO_USER=$(cfg_usr_dir) \
  DEVICE_PCI_FORWARD=y

wedge-l4ka-guest = WEDGE_L4KA DEVICE_PASSTHRU=n  \
  $(wedge-opts-y) \
  L4KA_INTERFACE_DIR=$(interfaces_dir) L4KA_PISTACHIO_USER=$(cfg_usr_dir) \

wedge-l4ka-guest-perf = WEDGE_L4KA DEVICE_PASSTHRU=n  \
  $(wedge-opts-y) \
  L4KA_INTERFACE_DIR=$(interfaces_dir) L4KA_PISTACHIO_USER=$(cfg_usr_dir) \
  OPTIMIZE=y 

wedge-l4ka-guest-vdev = WEDGE_L4KA DEVICE_PASSTHRU=n $(wedge-vdev-on) \
  $(wedge-opts-y) \
  L4KA_INTERFACE_DIR=$(interfaces_dir) L4KA_PISTACHIO_USER=$(cfg_usr_dir) \

wedge-l4ka-guest-vdev-perf = WEDGE_L4KA DEVICE_PASSTHRU=n $(wedge-vdev-on) \
  $(wedge-opts-y) \
  L4KA_INTERFACE_DIR=$(interfaces_dir) L4KA_PISTACHIO_USER=$(cfg_usr_dir) \
  OPTIMIZE=y 

# XXX need to specify WEDGE_VIRT/WEDGE_VIRT_BUBBLE_PAGES? WEDGE_VIRT_END
#     does not exist!
wedge-xen-2-dom0 = WEDGE_KAXEN DEVICE_PASSTHRU \
  $(wedge-opts-y) \
  KAXEN_HYP_INCLUDE=$(cfg_src_dir)/$(unpack_xen-2)/xen/include/public \
  KAXEN_INT_FP XEN_2_0 \
  #WEDGE_VIRT=0xF0000000 WEDGE_VIRT_END=0xFC000000

wedge-xen-2-dom0-perf = WEDGE_KAXEN DEVICE_PASSTHRU \
  $(wedge-opts-y) \
  KAXEN_HYP_INCLUDE=$(cfg_src_dir)/$(unpack_xen-2)/xen/include/public \
  KAXEN_INT_FP XEN_2_0 OPTIMIZE=y \
  #WEDGE_VIRT=0xF0000000 WEDGE_VIRT_END=0xFC000000

wedge-xen-3-domU = WEDGE_KAXEN DEVICE_PASSTHRU=n  \
  $(wedge-opts-y) \
  KAXEN_HYP_INCLUDE=$(cfg_src_dir)/$(unpack_xen-3)/xen/include/public \
  KAXEN_INT_FP XEN_3_0 \
  #WEDGE_VIRT=0xF0000000 WEDGE_VIRT_END=0xFC000000

wedge-xen-3-dom0 = WEDGE_KAXEN DEVICE_PASSTHRU \
  $(wedge-opts-y) \
  KAXEN_HYP_INCLUDE=$(cfg_src_dir)/$(unpack_xen-3)/xen/include/public \
  KAXEN_INT_FP XEN_3_0 \
  #WEDGE_VIRT=0xF0000000 WEDGE_VIRT_END=0xFC000000

wedge-xen-3-dom0-perf = WEDGE_KAXEN DEVICE_PASSTHRU \
  $(wedge-opts-y) \
  KAXEN_HYP_INCLUDE=$(cfg_src_dir)/$(unpack_xen-3)/xen/include/public \
  KAXEN_INT_FP XEN_3_0 OPTIMIZE=y \
  #WEDGE_VIRT=0xF0000000 WEDGE_VIRT_END=0xFC000000


define wedge_template
##  Parameter $1: cpu type
##  Parameter $2: the type of wedge
##  Parameter $3: hypervisor type

.PHONY: install-wedge-$2 install-wedge-$2-$1 install-wedge-$3-$2-$1 
.PHONY: clean-wedge-$2 clean-wedge-$2-$1 clean-wedge-$3-$2-$1 

install-wedge:: install-wedge-$3-$2-$1
install-wedge-$3:: install-wedge-$3-$2-$1
install-wedge-$3-$2-$1: $(cfg_boot_dir)/$1/afterburn-wedge-$3-$2

clean-wedge:: clean-wedge-$3-$2-$1
clean-wedge-$3:: clean-wedge-$3-$2-$1
clean-wedge-$3-$2-$1:
	@echo clean
	-$(Q) (cd $(cfg_build_dir)/afterburn-wedge-$3-$2-$1 && make $(S) clean)

reconfig-wedge-$3-$2-$1:
	@echo clean
	$(Q) (cd $(cfg_build_dir)/afterburn-wedge-$3-$2-$1 && make menuconfig)
seed-wedge-$3-$2-$1:
	@echo clean
	$(Q) (cd $(cfg_build_dir)/afterburn-wedge-$3-$2-$1 && make seedconfig)

uninstall-wedge:: uninstall-wedge-$3-$2-$1
uninstall-wedge-$3:: uninstall-wedge-$3-$2-$1
uninstall-wedge-$3-$2-$1:
	-$(Q) rm -f $(cfg_build_dir)/afterburn-wedge-$3-$2-$1/afterburn-wedge
	-$(Q) rm -f $(cfg_boot_dir)/$1/afterburn-wedge-$3-$2

$(cfg_boot_dir)/$1/afterburn-wedge-$3-$2: $(cfg_build_dir)/afterburn-wedge-$3-$2-$1/afterburn-wedge
	$(Q) mkdir -p $$(@D)
	$(Q) cp $$< $$@


.PHONY: $(cfg_build_dir)/afterburn-wedge-$3-$2-$1/afterburn-wedge

$(cfg_build_dir)/afterburn-wedge-$3-$2-$1/afterburn-wedge: $(cfg_build_dir)/afterburn-wedge-$3-$2-$1/config/config.h | wedge-$(3)-prereqs
	@echo "Building the Afterburn Wedge for hv $3 type $2 cpu $1" 
	$(Q) (cd $$(@D) && make $(S) $(MAKEOPTS) afterburn-wedge)

$(cfg_build_dir)/afterburn-wedge-$3-$2-$1/config/config.h: $(cfg_build_dir)/afterburn-wedge-$3-$2-$1/Makeconf.local \
						        $(cfg_common_dir)/config.out
	@echo "Configuring the Afterburn wedge-$3-$2-$1"
	#@echo "Options $(wedge-$3-$2) $(CPU-$1)"
	$(Q) (cd $(cfg_build_dir)/afterburn-wedge-$3-$2-$1 && make CMLBATCH_PARAMS='$(CPU-$1) $(wedge-$3-$2)' batchconfig)

$(cfg_build_dir)/afterburn-wedge-$3-$2-$1/Makeconf.local: 
	$(Q) mkdir -p $(cfg_build_dir)
	$(Q) (cd $(afterburn_dir)/afterburn-wedge && make BUILDDIR=$(cfg_build_dir)/afterburn-wedge-$3-$2-$1)


endef


##  Instantiate the wedge build templates.
$(foreach cpu,$(cpus-y),\
 $(eval $(foreach type,$(wedge-l4ka-y),$(eval $(call wedge_template,$(cpu),$(type),l4ka)))\
        $(foreach type,$(wedge-xen-2-y),$(eval $(call wedge_template,$(cpu),$(type),xen-2)))\
        $(foreach type,$(wedge-xen-3-y),$(eval $(call wedge_template,$(cpu),$(type),xen-3)))))

