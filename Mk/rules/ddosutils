
install-$(cfg_ddosutils) += install-ddosutils

.PHONY: install-ddosutils clean-ddosutils $(cfg_boot_dir)/ddosutils.gz

install-ddosutils: $(cfg_boot_dir)/ddosutils.gz

$(cfg_boot_dir)/ddosutils.gz: 
	@echo "Generating boot image for ddos"
	$(Q) mkdir -p $(cfg_build_dir)/ddosutils/ramdisk
	$(Q) mkdir -p $(cfg_build_dir)/ddosutils/ramdisk/dev
	$(Q) mkdir -p $(cfg_build_dir)/ddosutils/ramdisk/bin
#copy busybox binaries
	$(Q) cp -rf $(cfg_usr_dir)/$(unpack_busybox)/*	$(cfg_build_dir)/ddosutils/ramdisk/ 
#copy init script
	$(Q) cp $(afterburn_dir)/configs/ramdisk/init $(cfg_build_dir)/ddosutils/ramdisk/
	$(Q) chmod a+x $(cfg_build_dir)/ddosutils/ramdisk/init
#copy qemu network startup script 
	$(Q) mkdir -p $(cfg_build_dir)/ddosutils/ramdisk/etc
	$(Q) cp $(afterburn_dir)/configs/ramdisk/qemu-ifup $(cfg_build_dir)/ddosutils/ramdisk/etc
	$(Q) chmod a+x $(cfg_build_dir)/ddosutils/ramdisk/etc/qemu-ifup
#fstab file
	$(Q) touch $(cfg_build_dir)/ddosutils/ramdisk/etc/fstab
#interfaces file
	$(Q) mkdir -p $(cfg_build_dir)/ddosutils/ramdisk/etc/network
	$(Q) touch $(cfg_build_dir)/ddosutils/ramdisk/etc/network/interfaces
#copy qemu binary
	$(Q) cp $(cfg_build_dir)/qemu-dm/i386-dm/qemu-dm $(cfg_build_dir)/ddosutils/ramdisk/bin/
#copy vnc server keymaps
	$(Q) mkdir -p $(cfg_build_dir)/ddosutils/ramdisk/usr/local/share/qemu/keymaps
	$(Q) cp $(afterburn_dir)/contrib/qemu-dm/keymaps/* $(cfg_build_dir)/ddosutils/ramdisk/usr/local/share/qemu/keymaps
#create ramdisk
	$(Q) (cd $(cfg_build_dir)/ddosutils/ramdisk/ && find . | cpio --quiet -o -H newc | gzip > "$@")

