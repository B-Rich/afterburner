
.PHONY: install-pistachio-kernel patch-pistachio-kernel clean-pistachio-kernel

install-$(cfg_pistachio) += install-pistachio-kernel
cvs-$(cfg_pistachio) += pistachio

ifeq ($(cfg_pistachio_custom),y)
pistachio_src = 
pistachio_src_patch = 
pistachio_src_dir = $(cfg_pistachio_custom_dir)
else
pistachio_src = receipts/cvs-pistachio
pistachio_src_patch = receipts/custom-patch-pistachio-kernel
pistachio_src_dir = $(cfg_src_dir)/pistachio
endif
######################################################################
#
#  Patch and CVS logic.
#
######################################################################

##  Patch the Pistachio kernel.
patch-pistachio-kernel: receipts/custom-patch-pistachio-kernel
receipts/custom-patch-pistachio-kernel: $(pistachio_src)
	@echo "Patching the Pistachio kernel in $(pistachio_src_dir)."
	$(Q) (cd $(pistachio_src_dir) && patch -Np1 < $(afterburn_dir)/patches/pistachio/pistachio-kernel-perfmon.patch)
	$(Q) touch $@

##  Retrieve Pistachio from CVS.
ifeq ($(cfg_uka_internal_cvs),y)
l4ka_cvs_root = i30cvs.ira.uka.de:/home/cvs
else
ifeq ($(wildcard $(afterburn_dir)/CVS/Root),)
l4ka_cvs_root = :pserver:guest@cvs.l4ka.org:/public-cvs
else
l4ka_cvs_root = $(shell head -1 $(afterburn_dir)/CVS/Root)
endif
endif

receipts/cvs-pistachio:
	@echo "Retrieving Pistachio from CVS."
	$(Q) mkdir -p $(cfg_src_dir) receipts
	$(Q) (cd $(cfg_src_dir) && cvs -Q -d $(l4ka_cvs_root) co pistachio)
	$(Q) touch $@

######################################################################
#
#  Configuration
#
######################################################################

##  Which kernels to build.
pistachio-kernels-y =
pistachio-kernels-$(cfg_pistachio_p3) += p3
pistachio-kernels-$(cfg_pistachio_p4) += p4
pistachio-kernels-$(cfg_pistachio_p4_perf) += p4-perf
pistachio-kernels-$(cfg_pistachio_p4_small) += p4-small
pistachio-kernels-$(cfg_pistachio_p4_small_perf) += p4-small-perf
pistachio-kernels-$(cfg_pistachio_qemu) += qemu

##  Common kernel options.
pistachio-kernel-opts1-y =
pistachio-kernel-opts2-y =

pistachio-kernel-opts1-$(cfg_console_vga) += KDB_CONS_KDB 
pistachio-kernel-opts1-$(cfg_console_serial) +=  KDB_CONS_COM 

ifeq ($(cfg_l4ka_vmext),y)
kernel-menu-opts = IPC_FASTPATH=n EXPERIMENTAL X_VMEXTENSIONS  X_PAGER_EXREGS
else
#jsXXX: change for cvs version of pistachio
kernel-menu-opts = EXPERIMENTAL X_PAGER_EXREGS
endif

#ifeq ($(cfg_apic),y)
pistachio-kernel-opts2-y += MAX_IOAPICS=$(cfg_max_ioapics)
#endif

pistachio-kernel-opts2-$(cfg_console_vga) +=  KDB_BREAKIN_ESCAPE
pistachio-kernel-opts2-$(cfg_console_serial)+= KDB_COMSPEED=$(cfg_serial_speed)  KDB_BREAKIN_ESCAPE KDB_BREAKIN_BREAK

##  Specialized kernel options.
pistachio-kernel-opts1-p3 = \
  ARCH_IA32 CPU_IA32_I686 PLAT_PC99 SMP=n IOAPIC=$(cfg_apic) MAX_IOAPICS=$(cfg_max_ioapics)  \
  $(kernel-menu-opts) DEBUG PERFMON IA32_SMALL_SPACES=n SPIN_WHEELS=n KDB KDB_DISAS KDB_BREAKIN \
  $(pistachio-kernel-opts1-y) TRACEPOINTS VERBOSE_INIT TRACEBUFFER KMEM_TRACE  
pistachio-kernel-opts2-p3 = $(pistachio-kernel-opts2-y)

pistachio-kernel-opts1-p4 = \
  ARCH_IA32 CPU_IA32_P4 PLAT_PC99 SMP=n IOAPIC=$(cfg_apic) MAX_IOAPICS=$(cfg_max_ioapics)  \
  $(kernel-menu-opts) \
  DEBUG  PERFMON IA32_SMALL_SPACES=n SPIN_WHEELS=n KDB KDB_DISAS KDB_BREAKIN \
  TRACEPOINTS VERBOSE_INIT TRACEBUFFER KMEM_TRACE $(pistachio-kernel-opts1-y)  
pistachio-kernel-opts2-p4 = $(pistachio-kernel-opts2-y)

pistachio-kernel-opts1-p4-perf = \
  ARCH_IA32 CPU_IA32_P4 PLAT_PC99 SMP=n IOAPIC=$(cfg_apic) MAX_IOAPICS=$(cfg_max_ioapics)  \
  $(kernel-menu-opts) \
  PERFMON IA32_SMALL_SPACES=n SPIN_WHEELS=n KDB KDB_DISAS KDB_NO_ASSERTS=y \
  $(pistachio-kernel-opts1-y)
pistachio-kernel-opts2-p4-perf = $(pistachio-kernel-opts2-y)

pistachio-kernel-opts1-p4-small = \
  ARCH_IA32 CPU_IA32_P4 PLAT_PC99 SMP=n \
  $(kernel-menu-opts) \
  PERFMON SPIN_WHEELS=n KDB KDB_DISAS KDB_BREAKIN TRACEPOINTS VERBOSE_INIT \
  TRACEBUFFER KMEM_TRACE $(pistachio-kernel-opts1-y)
pistachio-kernel-opts2-p4-small = $(pistachio-kernel-opts2-y) IA32_SMALL_SPACES=y

pistachio-kernel-opts1-p4-small-perf = \
  ARCH_IA32 CPU_IA32_P4 PLAT_PC99 SMP=n  \
  $(kernel-menu-opts) \
  PERFMON SPIN_WHEELS=n KDB KDB_DISAS KDB_NO_ASSERTS=y \
  $(pistachio-kernel-opts1-y)
pistachio-kernel-opts2-p4-small-perf = $(pistachio-kernel-opts2-y) IA32_SMALL_SPACES=y

pistachio-kernel-opts1-qemu = \
  ARCH_IA32 CPU_IA32_I586 PLAT_PC99 SMP=n IOAPIC=$(cfg_apic) MAX_IOAPICS=$(cfg_max_ioapics)   \
  $(kernel-menu-opts) \
  IA32_SMALL_SPACES=n SPIN_WHEELS=n KDB KDB_DISAS KDB_BREAKIN TRACEPOINTS \
  VERBOSE_INIT TRACEBUFFER $(pistachio-kernel-opts1-y)
pistachio-kernel-opts2-qemu = $(pistachio-kernel-opts2-y)


######################################################################
#
#  Top-level rules
#
######################################################################

install-pistachio-kernel: $(foreach name,$(pistachio-kernels-y),install-pistachio-kernel-$(name))

clean-pistachio-kernel: $(foreach name,$(pistachio-kernels-y),clean-pistachio-kernel-$(name))

######################################################################
#
#  Rule templates
#
######################################################################

define pistachio_kernel_template

.PHONY: install-pistachio-kernel-$1 reconfig-pistachio-kernel-$1

install-pistachio-kernel-$1: $(cfg_boot_dir)/pistachio-$1 

$(cfg_boot_dir)/pistachio-$1: $(cfg_build_dir)/pistachio-kernel-$1/ia32-kernel
	$(Q) mkdir -p $(cfg_boot_dir)
	$(Q) cp $$< $$@
	$(Q) ln -sf `basename $$@` $(cfg_boot_dir)/pistachio

.PHONY: $(cfg_build_dir)/pistachio-kernel-$1/ia32-kernel
$(cfg_build_dir)/pistachio-kernel-$1/ia32-kernel: $(cfg_build_dir)/pistachio-kernel-$1/config/config.h
	$(Q) (cd $$(@D) && make -s $(MAKEOPTS) NO_CCACHE=1 TOOLPREFIX=$(tool_prefix))

$(cfg_build_dir)/pistachio-kernel-$1/config/config.h: $(cfg_build_dir)/pistachio-kernel-$1/Makefile \
						      $(cfg_common_dir)/config.out
	@echo "Configuring L4Ka Pistacho."
	$(Q) (cd $(cfg_build_dir)/pistachio-kernel-$1 && make batchconfig CMLBATCH_PARAMS='$(pistachio-kernel-opts1-$1)')
	$(Q) (cd $(cfg_build_dir)/pistachio-kernel-$1 && make batchconfig CMLBATCH_PARAMS='$(pistachio-kernel-opts2-$1)')

$(cfg_build_dir)/pistachio-kernel-$1/Makefile: $(pistachio_src_patch) 
	$(Q) mkdir -p $(cfg_build_dir)
	$(Q) (cd $(pistachio_src_dir)/kernel && make BUILDDIR=$(cfg_build_dir)/pistachio-kernel-$1)

reconfig-pistachio-kernel-$1: $(cfg_build_dir)/pistachio-kernel-$1/config/config.h
	$(Q) cd $(cfg_build_dir)/pistachio-kernel-$1 && make -s NO_CCACHE=1 TOOLPREFIX=$(tool_prefix) menuconfig

.PHONY: clean-pistachio-kernel-$1
clean-pistachio-kernel-$1:
	-$(Q) (cd $(cfg_build_dir)/pistachio-kernel-$1 && make clean)

endef

##  Instantiate the pistachio_kernel_template for each kernel configuration.
$(foreach name,$(pistachio-kernels-y),$(eval $(call pistachio_kernel_template,$(name))))


