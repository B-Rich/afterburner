CC=gcc-3.3 
SHELL=bash
ifndef NO_CCACHE
CCACHE?=	$(firstword $(shell type -p ccache))
endif

ifeq "$(origin CC)" "default"
CC=		"$(CCACHE) gcc-3.3"
endif

CCOPTS    =  CC=${CC}
MAKEOPTS ?= -j20 ${CCOPTS}

Q ?= @
S ?= -s

.PHONY: all
all: start

mk_dir := $(afterburn_dir)/Mk

##  Generate a valid configuration.
include $(mk_dir)/Makefile.cml
-include config.out

##  Only include the remaining build logic if we have a valid configuration.
ifeq ($(cfg_cml),y)
include $(mk_dir)/Makefile.world
endif

##  By default, print the README.txt.
.PHONY: help start
help:
	@more $(afterburn_dir)/README.txt
	@touch Makefile.help
##  If necessary, generate a Makefile in the build directory, so that
##  the user only needs to execute 'make'.
ifeq ($(wildcard Makefile),)
start: Makefile
Makefile:
	@echo "include $(afterburn_dir)/Makefile" > Makefile
	@cp  $(afterburn_dir)/configs/sample-config.out config.out
	@echo "Your settings are now cached in Makefile"
else
ifeq ($(wildcard Makefile.help),)
start: help
else
start: world
endif
endif

