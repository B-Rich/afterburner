#ifndef __INTERFACES__TYPES_IDL__
#define __INTERFACES__TYPES_IDL__

const L4_Word_t max_cpus = 16;
const L4_Word_t max_domains = 32;

typedef int guid_t;

/* See resourcemon and earm interfaces */

const int UUID_ILocator		= 0;
const int UUID_IResourcemon	= 1;
const int UUID_IConsole		= 2;
const int UUID_IVMblock		= 3;
const int UUID_IVMnet		= 5;
const int UUID_IVMpci		= 6;
const int UUID_IVMControl	= 8;
const int UUID_IEarm		= 10;

const int UUID_Max_IF = 13;

/* See resourcemon and earm interfaces */
typedef struct vminfo {
    // general VM info
	
    // contiguous physical memory region (paddr_len)
    L4_Word_t space_size;
    // The base address for this VM's contiguous memory region within the 
    // resourcemon
    L4_Word_t haddr_base;  
    // virtual address space offset
    L4_Word_t vaddr_offset;

    // wedge memory information
    L4_Word_t wedge_paddr; // physical start address
    L4_Word_t wedge_vaddr; // virtual start address
    L4_Word_t wedge_size; // size
	
    // shared data between the resourcemon and the VM
    // resides in the resourcemon's physical memory and
    // is mapped into the VM address space, so this area
    // must be copied separately
    L4_Word_t client_shared_area[4096];
    // client shared page vaddr from ELF
    L4_Word_t client_shared_vaddr;

    // KIP, as read from the ELF image
    // L4_Fpage_t source_kip_fp = source_vm->get_kip_fp();
    // L4_Word_t kip_start = L4_Address(source_kip_fp);
    // L4_Word_t kip_size = L4_Size(source_kip_fp);
    // this->kip_fp = L4_Fpage(kip_start, kip_size);
    L4_Word_t kip_start;
    L4_Word_t kip_size;

    // UTCB, as read from the ELF image
    // L4_Fpage_t source_utcb_fp = source_vm->get_utcb_fp();
    // L4_Word_t utcb_start = L4_Address(source_utcb_fp);
    // L4_Word_t utcb_size = L4_Size(source_utcb_fp);
    // this->utcb_fp = L4_Fpage(utcb_start, utcb_size);	
    L4_Word_t utcb_start;
    L4_Word_t utcb_size;

    // start and stack addresses
    L4_Word_t binary_stack_vaddr;
    L4_Word_t binary_entry_vaddr;

    // energy accounting info
} VMInfo;
#endif /* !__INTERFACES__TYPES_IDL__ */
