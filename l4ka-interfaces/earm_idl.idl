/*********************************************************************
 *
 * Copyright (C) 2003-2004,  Karlsruhe University
 *
 * File path:     interfaces/accounting_idl.idl
 * Description:   
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 ********************************************************************/

import "l4/types.h";
#include "types.idl"

const int UUID_IEarm_AccResCPU_Min	  = 0;
const int UUID_IEarm_AccResCPU_Max	  = 15;
const int UUID_IEarm_AccResDisk		  = 16;
const int UUID_IEarm_AccResMax		  = 17;

[uuid(UUID_IEarm)]
interface IEarm
{
#if defined(EARM)
    typedef L4_Word64_t energy_t;
    typedef L4_Word_t power_t;

    typedef struct {
	energy_t limit;
	energy_t base_cost[UUID_IEarm_AccResMax];
	energy_t access_cost[UUID_IEarm_AccResMax];
    } domain_info_t;

    typedef struct {
	domain_info_t clients[MAX_DOMAINS];
	L4_Word_t max_domain_in_use;
    } shared_t;
    
    exception invalid_guid_format {};
    exception unknown_resource {};

    void register_resource([in] guid_t guid, [out] fpage *logfile);
    
    void open([in] guid_t guid, [out] L4_ThreadId_t *resource);
    
    void close([in] guid_t guid);
    
    // jsXXX: IDL4 seems to have problems with 64-bit values
    void get_counter([in] guid_t guid, [out] L4_Word_t *hi, [out] L4_Word_t *lo);
#endif
};
    
