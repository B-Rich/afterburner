/*********************************************************************
 *
 * Copyright (C) 2003-2004,  Karlsruhe University
 *
 * File path:	interfaces/qemu-dm_pager_idl.idl
 * Description:	Interface definitions for the service locator.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 ********************************************************************/

import "l4/types.h";
#include "types.idl"


library IQEMU_DM_PAGER
{
    typedef L4_Word_t addr_t;
    const L4_Word_t INVALID_TYPE = 0;
    const L4_Word_t SHARED_IO_PAGE = 1;
    const L4_Word_t BUFFERED_IO_PAGE = 2;
    const L4_Word_t VMEM = 3;
    const L4_Word_t MMIO = 4;

    exception invalid_address {};
    exception invalid_index {};
    exception invalid_irq {};
    exception invalid_port {};


    [uuid(UUID_IQEMU_DM_PAGER)] interface Control
    {
	[uuid(1)] void
	request_page(  [in] addr_t address, [out] fpage *page)
		raises( invalid_address );

	[uuid(2)] void
	request_special_page( [in] L4_Word_t type, [in] L4_Word_t offset, [out] fpage *page)
	raises( invalid_index );

	[uuid(3)] void
	raise_irq( [in] L4_Word_t irq)
	raises( invalid_irq );

	[uuid(4)] void
	set_guest_memory_mapping( [in] L4_Word_t type, [in] L4_Word_t start, [in] L4_Word_t size)
	raises( invalid_index);

	[uuid(5)] void
	setCMOSData( [in] L4_Word_t port_addr, [in] L4_Word_t data)
	    raises( invalid_port );
    };

};

