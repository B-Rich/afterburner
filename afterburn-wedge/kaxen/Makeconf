######################################################################
##                
## Copyright (C) 2003-2010,  Karlsruhe University
##                
## File path:     kaxen/Makeconf
## Description:   
##                
## Redistribution and use in source and binary forms, with or without
## modification, are permitted provided that the following conditions
## are met:
## 1. Redistributions of source code must retain the above copyright
##    notice, this list of conditions and the following disclaimer.
## 2. Redistributions in binary form must reproduce the above copyright
##    notice, this list of conditions and the following disclaimer in the
##    documentation and/or other materials provided with the distribution.
## 
## THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
## ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
## IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
## ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
## FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
## DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
## OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
## HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
## LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
## OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
## SUCH DAMAGE.
##                
## $Id$
##                
######################################################################
SOURCES_START = common/crtbegin.cc
SOURCES_END = common/crtend.cc

ifeq "$(ARCH)" "amd64"
kaxen/amd64/startup.o: kaxen/amd64/startup.cc
	@$(ECHO_MSG) $(subst $(SRCDIR)/,,$<)
	@if [ ! -d $(dir $@) ]; then $(MKDIRHIER) $(dir $@); fi
	cd $(@D) && $(CC) $(GCC_FLAGS) $(CPPFLAGS) $(subst -O9,,$(subst -mcmodel=kernel,,$(CCFLAGS))) -c $<
	objcopy --prefix-sections .low $@ $@

SOURCES += kaxen/$(ARCH)/startup_high.cc
endif

# TODO amd64
ifeq "$(ARCH)" "amd64"
SOURCES += kaxen/$(ARCH)/startup.cc kaxen/main.cc kaxen/controller.cc \
  kaxen/memory.cc kaxen/$(ARCH)/memory.cc kaxen/$(ARCH)/memory_init.cc \
  kaxen/$(ARCH)/backend.cc kaxen/linux-2.6.cc kaxen/$(ARCH)/entry.S \
  kaxen/callbacks.cc \
  kaxen/$(ARCH)/traps.cc # kaxen/cpu.cc kaxen/irq.cc \
  common/memory.cc common/iostream.cc \
  common/gcc_support.cc common/elfsimple.cc common/elfrewrite.cc \
  common/burn_symbols.cc common/aftertime.cc \
  $(ARCH)/bind.cc $(ARCH)/rewrite_stackless.cc $(ARCH)/burn.S \
  $(ARCH)/cpu.cc $(ARCH)/intlogic.cc $(ARCH)/debug.cc \

# XXX temporary
SOURCES += common/memory.cc common/iostream.cc \
		   common/gcc_support.cc common/burn_symbols.cc \
		   common/elfsimple.cc common/elfrewrite.cc \
		   $(ARCH)/rewrite_stackless.cc $(ARCH)/intlogic.cc \
		   $(ARCH)/bind.cc amd64/burncc.cc $(ARCH)/cpu.cc \
		   common/string.cc $(ARCH)/debug.cc \
		   common/aftertime.cc kaxen/boot.cc $(ARCH)/burn.S

SOURCES-$(CONFIG_DEBUGGER) += kaxen/debug.cc $(ARCH)/dis.c

else

SOURCES += kaxen/$(ARCH)/startup.cc kaxen/main.cc kaxen/controller.cc \
  kaxen/memory.cc kaxen/$(ARCH)/memory.cc kaxen/$(ARCH)/memory_init.cc \
  kaxen/$(ARCH)/backend.cc kaxen/linux-2.6.cc kaxen/$(ARCH)/entry.S \
  kaxen/callbacks.cc \
  kaxen/$(ARCH)/traps.cc kaxen/cpu.cc kaxen/irq.cc \
  common/memory.cc common/iostream.cc \
  common/gcc_support.cc common/elfsimple.cc common/elfrewrite.cc \
  common/burn_symbols.cc common/aftertime.cc \
  $(ARCH)/bind.cc $(ARCH)/rewrite_stackless.cc $(ARCH)/burn.S \
  $(ARCH)/cpu.cc $(ARCH)/intlogic.cc $(ARCH)/debug.cc \
  common/string.cc kaxen/boot.cc

SOURCES-$(CONFIG_DEBUGGER) += kaxen/debug.cc $(ARCH)/dis.c
endif

SOURCES-$(CONFIG_VMI_SUPPORT) += $(ARCH)/vmi.cc $(ARCH)/vmi-stub.S
